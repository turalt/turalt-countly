## Handle the main server -- this only listens on the private network. Nothing
## on the public network should break in here, as that's firewalled off. 

log_format upstream_access   '$proxy_add_x_forwarded_for - $remote_user '
                             '"$request" $status $body_bytes_sent $request_time '
                             '"$http_referer" "$http_user_agent"';

## Add the web server.
server {
  listen               {{hostvars[inventory_hostname]['ansible_' + public_network_interface]['ipv4']['address']}}:443 ssl http2;
  server_name          {{webapp_domain}};

  access_log  syslog:server=unix:/dev/log,tag=nginx_app,nohostname,severity=info upstream_access;
  error_log   syslog:server=unix:/dev/log,tag=nginx_app,nohostname;

{% include "./templates/nginx-ssl-config.j2" %}
{% include "./templates/nginx-common-config.j2" %}

  root {{static_directory}};

{% include "./templates/nginx-proxy-config.j2" %}

  location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|ttf|woff|eot|mp4)$ {
    expires 365d;
    add_header Pragma public;
    add_header Cache-Control "public";
  }

  location / {
    try_files $uri/index.html $uri /index.html =404;
  }
}


# Add in a redirection, for more or less all the standard (not admin servers), though to the
# standard system. We don't need anything similar for admin, because we're not wanting that to
# to be as open. 
server {
  listen               {{hostvars[inventory_hostname]['ansible_' + public_network_interface]['ipv4']['address']}}:80;
  server_name          {{webapp_domain}};

  access_log  syslog:server=unix:/dev/log,tag=nginx_http,nohostname,severity=info upstream_access;
  error_log   syslog:server=unix:/dev/log,tag=nginx_http,nohostname;

  location / {
    return 301 https://$host$request_uri;
  }

  location "/.well-known/acme-challenge" {
    root /var/www/html;
  }
}
